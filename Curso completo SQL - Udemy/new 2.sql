/* views */

SELECT C.NOME, C.SEXO, IFNULL(C.EMAIL,"SEM EMAIL") AS "E-MAIL", 
	   T.TIPO, T.NUMERO, 
	   E.BAIRRO, E.CIDADE, E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

CREATE VIEW v_RELATORIO AS 

SELECT C.NOME, C.SEXO, 
	   IFNULL(C.EMAIL,"SEM EMAIL") AS "E-MAIL", 
	   T.TIPO, T.NUMERO, 
	   E.BAIRRO, E.CIDADE, E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

SELECT * FROM v_RELATORIO
WHERE SEXO = 'F';


DELETE FROM CLIENTE 
WHERE NOME = 'ANA';

INSERT INTO CLIENTE VALUES(NULL,'CAUÊ','cauenumo@gmail.com','12045-5','M');
INSERT INTO CLIENTE VALUES(NULL,'JORGE','JORGE@IG.COM','88657-5','M');

INSERT INTO TELEFONE VALUES(NULL,'CEL','968420838',9);

INSERT INTO ENDERECO VALUES(NULL,'RUA C','VILA MEDERIOS','SÃO PAULO','SP',9);
-- ORGANIZANDO CHAVES E CONSTRANTS 

DROP TABLE ENDERECO;
DROP TABLE TELEFONE;
DROP TABLE CLIENTE;

CREATE TABLE CLIENTE(
	IDCLIENT INT,
	NOME 
);

-- 1------------+

SELECT C.NOME, C.EMAIL, T.NUMERO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
WHERE TIPO = 'CEL' AND ESTADO = 'RJ';

+--------+------------------+----------+
| NOME   | EMAIL            | NUMERO   |
+--------+------------------+----------+
| CARLOS | CARLOS@TERRA.COM | 71218326 |
| ANA    | ANA@GLOBO.COM    | 71218326 |
| CELIA  | JOAO@TERRA.COM   | 71218326 |
| JOAO   | JOAO@IG.COM      | 68420838 |
+--------+------------------+----------+


SELECT C.NOME, 
	   C.EMAIL, 
	   T.NUMERO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
WHERE SEXO = 'F' AND TIPO = 'CEL' AND ESTADO = 'SP';

Empty set (0.01 sec)

SELECT C.NOME, 
	   IFNULL(C.EMAIL,'SEM EMAIL') AS 'EMAIL', 
	   T.NUMERO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
;

-------- 2 ----------------
,/* order by */

SELECT C.NOME, C.SEXO, C.CPF, E.CIDADE
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
ORDER BY NOME, CPF ASC;

SELECT C.NOME, C.SEXO, C.CPF, E.CIDADE
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
ORDER BY NOME, CPF DESC;

DELETE FROM CLIENTE
WHERE CPF = '86695-6';

DELETE FROM ENDERECO
WHERE ID_CLIENTE = 7;

DELETE FROM TELEFONE 
WHERE ID_CLIENTE = 7;

--- 66 ----
/* Procedures */

CREATE PROCEDURE NOME()
BEGIN
		ACAO; 
	
END
$

CREATE PROCEDURE CONTA()
BEGIN
		SELECT 10 + 10 AS "CONTA";
END
$

/* Apagar Procedure */

DROP PROCEDURE NOME_PROCEDURE
/* */

DELIMITER $

CREATE PROCEDURE CONTA(A INT,B INT)
BEGIN 
		SELECT A + B AS "CONTA";
END
$

CREATE PROCEDURE CONTA_MULT(A INT, B INT)
BEGIN
		SELECT A * B AS "CONTA";
END
$



CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	HORAS INT(3) NOT NULL,
	VALOR FLOAT(10,2) NOT NULL
);


INSERT INTO CURSOS VALUES(NULL,'BANCO DE DADOS FUNDAMENTAL',25,200.00);

DELIMITER *

CREATE PROCEDURE CAD_CURSO(P_NOME VARCHAR(30),P_HORAS INT(3),P_PRECO FLOAT(10,2))
BEGIN
		INSERT INTO CURSOS VALUES(NULL, P_NOME,P_HORAS,P_PRECO);
END
$

DELIMITER ;

CALL CAD_CURSO('DESENVOLVEDOR WE',45,200.00);

DELETE PROCEDURE CAD_CURSO


DELIMITER #

CREATE PROCEDURE SEL_CURSO()
BEGIN
		SELECT IDCURSO, NOME, HORAS, VALOR FROM CURSOS;
END
#

DELIMITER ;


CREATE TABLE VENDEDORES(
	IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	JANEIRO FLOAT(10,2),
	FEVEREIRO FLOAT(10,2),
	MARCO FLOAT(10,2)
);

INSERT INTO VENDEDORES VALUES(NULL,'CARLOS','M',76324.78,85642.49,7741.54);
INSERT INTO VENDEDORES VALUES(NULL,'MARIA','F',72827.47,45284.65,1457.47);
INSERT INTO VENDEDORES VALUES(NULL,'ANTONIO','M',54224.25,88346.78,7856.77);
INSERT INTO VENDEDORES VALUES(NULL,'CLARA','F',12547,46956.24,7753.94);
INSERT INTO VENDEDORES VALUES(NULL,'ANDERSON','M',25786.96,25658.47,9658.93);
INSERT INTO VENDEDORES VALUES(NULL,'IVONE','F',25478.24,12548.25,8564.58);
INSERT INTO VENDEDORES VALUES(NULL,'JOÃO','M',98563.75,45125.45,1458.58);
INSERT INTO VENDEDORES VALUES(NULL,'CELIA','F',25474.02,96645.25,2356.25);



SELECT MAX(FEVEREIRO) AS "MAIOR VENDA DE FEVEREIRO" FROM VENDEDORES;

SELECT MIN(FEVEREIRO) AS "MAIOR VENDA DE FEVEREIRO" FROM VENDEDORES;

SELECT TRUNCATE(AVG(MARCO),2) AS "MAIOR VENDA DE FEVEREIRO" FROM VENDEDORES;

VARIAS FUNÇÕES

SELECT MAX(JANEIRO) AS "MAIOR JANEIRO",
	   MIN(JANEIRO) AS "MAIOR JANEIRO",
	   TRUNCATE(AVG(JANEIRO),2) AS "MÉDIA JANEIRO'"
	   FROM VENDEDORES;

SELECT SUM(JANEIRO) AS "TOTAL DE VENDAS",
	   SUM(FEVEREIRO) AS "TOTAL DE FEVEREIRO",
	   SUM(MARCO) AS "TOTAL DE MARÇO"
FROM VENDEDORES;

SELECT MIN(MARCO) AS "MENOR VENDA",
		NOME
FROM VENDEDORES
WHERE MIN(MARCO) = NOME;


SELECT NOME, MARCO FROM VENDEDORES;

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (SELECT MIN(MARCO) FROM VENDEDORES);

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (SELECT MAX(MARCO) FROM VENDEDORES);

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO > (SELECT AVG(MARCO) FROM VENDEDORES);


SELECT NOME,
	   JANEIRO,	
	   FEVEREIRO,
	   MARCO,
	    (JANEIRO+FEVEREIRO+MARCO) AS "TOTAL",
		TRUNCATE((JANEIRO+FEVEREIRO+MARCO)/3,2) AS "MEDIA"
		FROM VENDEDORES;


/* APLICANDO PORCENTAGEM */ 

SELECT NOME,
	   JANEIRO,
	   FEVEREIRO,
	   MARCO,
	   (JANEIRO+FEVEREIRO+MARCO) *.25 AS "DESCONTO",
	   (JANEIRO+FEVEREIRO+MARCO) AS "TOTAL",
		TRUNCATE((JANEIRO+FEVEREIRO+MARCO)/3,2) AS "MEDIA"
		FROM VENDEDORES;
		
/* ALTERANDO TABELAS*/

CREATE TABLE TABELA(
	COLUNA1 VARCHAR(30),
	COLUNA2 VARCHAR(30),
	COLUNA3 VARCHAR(30)
);
/* ADICIONANDO UMA PRIMARY KEY */
ALTER TABLE TABELA 
ADD PRIMARY KEY (COLUNA1);

/* ADICIONANDO COLUNA SEM POSICAO. ULTIMA POSICAO*/ 
ALTER TABLE TABELA 
ADD COLUNA VARCHAR(30);

/* ADICIONANDO UMA COLUNA COM POSICAO */
ALTER TABLE TABELA
ADD COLUMN COLUNA4 VARCHAR(30) NOT NULL UNIQUE
AFTER COLUNA3;

--  MODIFICANDO TIPO DE UM CAMPO 
ALTER TABLE TABELA MODIFY COLUNA2 DATE NOT NULL;

-- RENOMEANDO TABELA
ALTER TABLE TABELA 
RENAME PESSOA;

CREATE TABLE TIMES(
	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
	TIME VARCHAR(30),
	ID_PESSOA VARCHAR(30)
);


ALTER TABLE TIME
ADD FOREIGN KEY(ID_PESSOA)
REFERENCES PESSOA(COLUNA1);


SHOW CREATE TABLE TIME;

CREATE TABLE JOGADOR(
	IDJOGADOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30)
);

CREATE TABLE TIMES(
	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
	NOMETIME VARCHAR(30),
	ID_JOGADOR INT,
	FOREIGN KEY(ID_JOGADOR)
	REFERENCES JOGADOR(IDJOGADOR)	
);

INSERT INTO JOGADOR VALUES(NULL,'GUERRERO');
INSERT INTO TIMES VALUES(NULL,'FLAMENGO',1);

SELECT C.NOME, 
	   T.NUMERO
	   FROM CLIENTE C
	   INNER JOIN TELEFONE T
	   ON C.IDCLIENTE = T.ID_CLIENTE
	   GROUP BY NOME
	   WITH ROLLUP;



DROP TABLE ENDERECO;
DROP TABLE TELEFONE;
DROP TABLE CLIENTE;


CREATE TABLE CLIENTE(
	IDCLIENTE INT,
	NOME VARCHAR(30) NOT NULL 
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT,
	TIPO CHAR(3) NOT NULL,
	NUMERO VARCHAR(10)NOT NULL,
	IDCLIENTE INT 
);

ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE
PRIMARY KEY (IDCLIENTE);

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY(IDCLIENTE) REFERENCES CLIENTE(IDCLIENTE);

/* DICIONARIO DE DADOS */

USE INFORMATION_SCHEMA

SHOW TABLES;

DESC TABLE_CONSTRAINTS;

SELECT CONSTRAINT_SCHEMA AS BANCO, 
	   TABLE_NAME AS TABELA,
	   CONSTRAINT_NAME AS 'NOME_DA REGRA',
	   CONSTRAINT_TYPE AS TIPO
	   FROM TABLE_CONSTRAINTS
	   WHERE CONSTRAINT_SCHEMA = 'loja';

/* APAGANDO CONSTRAINTS */ 

ALTER TABLE TELEFONE 
DROP FOREIGN KEY FK_CLIENTE_TELEFONE;
	   
ALTER TABLE TELEFONE ADD CONSTRAINT  FK_CLIENTE_TELEFONE
FOREIGN KEY(ID_CLIENTE) REFERENCES(IDCLIENTE);





